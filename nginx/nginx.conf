user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    # 2^16 - previous limit (1024)
	worker_connections 64512;
}

http {

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	types_hash_max_size 2048;
	# server_tokens off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;


	# Logging
	# -------
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	# Compression
	# -----------
	gzip on;
	gzip_disable "msie6";

	# Hardening
	# ---------
    server_tokens off;
    error_page 401 403 404 /404.html;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Buffers
    # -------
    client_body_buffer_size 64k;
    client_header_buffer_size 1k;
    client_max_body_size 128k;
    large_client_header_buffers 4 4k;


    # =====
    #  SSL
    # =====


    # Client TLS
    ssl_client_certificate /etc/nginx/certs/cloudflare/origin-pull.pem;
    ssl_verify_client on;

    # Server Certificates (Let's Encrypt)
    ssl_certificate /etc/nginx/certs/moldyboot.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/moldyboot.com/key.pem;

    # Keep sessions small
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Long-lived 4096 Diffie-Hellman parameter
    ssl_dhparam /etc/nginx/certs/moldyboot.com/dhparam.pem;

    # Protocols
    # ---------
    # TODO add TLSv1.3 when available
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS
    # ----
    add_header Strict-Transport-Security max-age=15768000;  # 6 months

    # OCSP Stapling
    # -------------
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/certs/letsencrypt/x3-cross-signed.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;


    # ======================
	#  Virtual Host Configs
	# ======================


	# http -> https
	# -------------
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        return 301 https://$host$request_uri;
    }

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
