#!/usr/bin/env python
import bloop
import boto3
import falcon
import redis
import rq

from wsgiref import simple_server
from gaas.resources.api import Keys, Signup, Verifications
from gaas.models import BaseModel
from gaas.controllers import KeyManager, UserManager
from gaas.middleware import Authentication, TranslateJSON
from gaas.tasks import AsyncEmail

PORT = 8010

boto3.setup_default_session(profile_name="gaas-integ")
engine = bloop.Engine()
engine.bind(base=BaseModel)

redis_connection = redis.StrictRedis()
queue = rq.Queue(connection=redis_connection)

key_manager = KeyManager(engine)
user_manager = UserManager(engine)
async_email = AsyncEmail(queue, user_manager, boto3, PORT)

api = application = falcon.API(
    middleware=[
        TranslateJSON(),
        Authentication(key_manager, user_manager)
    ]
)
api.add_route("/keys", Keys(key_manager))
api.add_route("/signup", Signup(user_manager, async_email))
api.add_route("/verify/{user_id}/{verification_code}", Verifications(user_manager))


httpd = simple_server.make_server("127.0.0.1", PORT, api)
print("Serving API on {}".format(PORT))
httpd.serve_forever()
